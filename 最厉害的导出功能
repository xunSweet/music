                                              最厉害的导出功能（export）
  张权伟：
  导出功能：
/**
	 *  导出
	 * 
	 * */
   
    public void exportExcel(){
		 String resourceId = getRequest().getParameter("resourceId");
		 log.info("自定义报表导出"+resourceId);
		 customReport = customReportService.getCustomReportByResourceId(resourceId);
		 String  sql  = customReport.getSqlStr();
		 String dataColumns=customReport.getJsdataColumns();
		 JSONArray jsonarr=JSONArray.fromObject(dataColumns);
		 String[] jsonLabel=new String[jsonarr.size()];
		 for (int i = 0; i < jsonarr.size(); i++) {
			 JSONObject json = jsonarr.getJSONObject(i);
			 jsonLabel[i]=json.get("label").toString();
		}
	     List<Object> data=viewCustomReportService.queryBySql(sql);
	     ExportXLS.exportExcel(customReport.getReportName(), jsonLabel, data, getResponse());
		 //excelUtil.executeSql(sql,customReport.getReportName(),jsonLabel,key,  getResponse());
		 log.info("导出结束");
	 }
   
   
   //导出接口  POI技术
     //遍历集合数据，产生数据行
		      for (int i = 0; i < listData.size(); i++) {
		         row = sheet.createRow(i+1);
		         //利用反射，根据javabean属性的先后顺序，动态调用getXxx()方法得到属性值
		         JSONArray arr=JSONArray.fromObject(listData.get(i));
		         for (int j = 0; j < arr.size(); j++) {
		            HSSFCell cell = row.createCell(j);
		            cell.setCellStyle(style2);
		            cell.setCellValue(arr.get(j)!=null?arr.get(j).toString():"");
		         }
		      }
		      try {
          //这个东西就是在浏览端直接下载
			        response.setContentType("application/vnd.ms-excel");
			        String fileName =title;
			        response.setCharacterEncoding("utf-8");
			        response.setHeader("Content-disposition",
			                "attachment;filename="+new String(fileName.getBytes(), "ISO8859-1")+ ".xlsx");
			        OutputStream ouputStream = response.getOutputStream();
			        workbook.write(ouputStream);
			        ouputStream.flush();
			        ouputStream.close();
		      } catch (IOException e) {
		         e.printStackTrace();
		      }
